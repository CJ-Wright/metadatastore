If you perform a search:

    search(scan_id=2, data=True)

The return value will be formatted like this:
{
    headers: {
        run_hdr_id1: {
            _id: hashed input
            beamline_id: string
            beamline_config_id : hashed_id
            custom: ??
            end_time: number
            owner: string
            scan_id: int
            start_time: number
            status: string (In Progress or Complete)
        },
        run_hdr_id2: {},
        run_hdr_id3: {},
        ...
    },
    beamline_configs: {
        beamline_config_id1: {
            _id: hashed input
            headers: list of run headers specific beamline_config belongs
            beamline_id: string
            custom: dictionary
        },
        beamline_config_id2 : {}
        beamline_config_id3 : {}
        ...
    }

    event_descriptors: {
        event_descriptor_id1: {
            id: hashed input
            descriptor_name: string
            event_type_id: integer
            run_header_id: hashed input
            tag: list
            type_descriptor: ??
            data_keys: {
                pv1_alias: {pv1_name: 'XF:23ID1-OP{Slt:3-Ax:X}Mtr'},
                pv2_alias: {pv2_name: 'pv1_name: 'XF:23ID1-OP{Slt:3-Ax:X}Mtr'},
                ....
            }
        },
        event_descriptor_id1: {},
        event_descriptor_id2: {},
        ...
    }
    events: {
        event_id0: {
            _id: hashed input
            data: {
                data_keys[0]: data0,
                data_keys[1]: data1,
                data_keys[N]: dataN
            }
            time: datetime (unix/epics?)
            description:
            event_descriptor_id: hashed input
            run_header_id: hashed input
            owner: string
            seq_no: int
        },
        event_id1: {}
        event_id2: {}
        ...
    }
}